%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 91.5625 3.1875 321.938 260.688
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 263.875 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
91.562500 260.687500 translate
1.000000 -1.000000 scale
0.000000 0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		230.375000 def
/Mheight	257.500000 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: 1.11802 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.447088 0.423282 0.4499 0.423282 [
[.02381 .4374 -6 -9 ]
[.02381 .4374 6 0 ]
[.23545 .4374 -12 -9 ]
[.23545 .4374 12 0 ]
[.65873 .4374 -9 -9 ]
[.65873 .4374 9 0 ]
[.87037 .4374 -3 -9 ]
[.87037 .4374 3 0 ]
[.43459 .02662 -12 -4.5 ]
[.43459 .02662 0 4.5 ]
[.43459 .23826 -24 -4.5 ]
[.43459 .23826 0 4.5 ]
[.43459 .66154 -18 -4.5 ]
[.43459 .66154 0 4.5 ]
[.43459 .87318 -6 -4.5 ]
[.43459 .87318 0 4.5 ]
[.43459 1.08482 -18 -4.5 ]
[.43459 1.08482 0 4.5 ]
[ 0 0 0 0 ]
[ 1 1.11802 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.02381 .4499 m
.02381 .45615 L
s
[(-1)] .02381 .4374 0 1 Mshowa
.23545 .4499 m
.23545 .45615 L
s
[(-0.5)] .23545 .4374 0 1 Mshowa
.65873 .4499 m
.65873 .45615 L
s
[(0.5)] .65873 .4374 0 1 Mshowa
.87037 .4499 m
.87037 .45615 L
s
[(1)] .87037 .4374 0 1 Mshowa
.125 Mabswid
.06613 .4499 m
.06613 .45365 L
s
.10846 .4499 m
.10846 .45365 L
s
.15079 .4499 m
.15079 .45365 L
s
.19312 .4499 m
.19312 .45365 L
s
.27778 .4499 m
.27778 .45365 L
s
.3201 .4499 m
.3201 .45365 L
s
.36243 .4499 m
.36243 .45365 L
s
.40476 .4499 m
.40476 .45365 L
s
.48942 .4499 m
.48942 .45365 L
s
.53174 .4499 m
.53174 .45365 L
s
.57407 .4499 m
.57407 .45365 L
s
.6164 .4499 m
.6164 .45365 L
s
.70106 .4499 m
.70106 .45365 L
s
.74339 .4499 m
.74339 .45365 L
s
.78571 .4499 m
.78571 .45365 L
s
.82804 .4499 m
.82804 .45365 L
s
.9127 .4499 m
.9127 .45365 L
s
.95503 .4499 m
.95503 .45365 L
s
.99735 .4499 m
.99735 .45365 L
s
.25 Mabswid
0 .4499 m
1 .4499 L
s
.44709 .02662 m
.45334 .02662 L
s
[(-1)] .43459 .02662 1 0 Mshowa
.44709 .23826 m
.45334 .23826 L
s
[(-0.5)] .43459 .23826 1 0 Mshowa
.44709 .66154 m
.45334 .66154 L
s
[(0.5)] .43459 .66154 1 0 Mshowa
.44709 .87318 m
.45334 .87318 L
s
[(1)] .43459 .87318 1 0 Mshowa
.44709 1.08482 m
.45334 1.08482 L
s
[(1.5)] .43459 1.08482 1 0 Mshowa
.125 Mabswid
.44709 .06895 m
.45084 .06895 L
s
.44709 .11127 m
.45084 .11127 L
s
.44709 .1536 m
.45084 .1536 L
s
.44709 .19593 m
.45084 .19593 L
s
.44709 .28059 m
.45084 .28059 L
s
.44709 .32292 m
.45084 .32292 L
s
.44709 .36524 m
.45084 .36524 L
s
.44709 .40757 m
.45084 .40757 L
s
.44709 .49223 m
.45084 .49223 L
s
.44709 .53456 m
.45084 .53456 L
s
.44709 .57688 m
.45084 .57688 L
s
.44709 .61921 m
.45084 .61921 L
s
.44709 .70387 m
.45084 .70387 L
s
.44709 .7462 m
.45084 .7462 L
s
.44709 .78853 m
.45084 .78853 L
s
.44709 .83085 m
.45084 .83085 L
s
.44709 .91551 m
.45084 .91551 L
s
.44709 .95784 m
.45084 .95784 L
s
.44709 1.00017 m
.45084 1.00017 L
s
.44709 1.04249 m
.45084 1.04249 L
s
.25 Mabswid
.44709 0 m
.44709 1.11802 L
s
0 0 m
1 0 L
1 1.11802 L
0 1.11802 L
closepath
clip
newpath
.5 Mabswid
.87037 .4499 m
.87033 .4499 L
.87023 .4499 L
.87004 .44991 L
.86977 .44991 L
.86912 .44994 L
.86815 .44999 L
.86675 .45008 L
.86491 .45024 L
.86068 .4507 L
.85509 .45149 L
.84877 .45259 L
.83065 .45669 L
.80738 .46366 L
.78249 .47296 L
.71759 .50539 L
.65669 .54675 L
.59252 .60381 L
.53949 .66532 L
.49576 .73232 L
.47979 .76341 L
.46657 .79431 L
.45834 .81789 L
.45233 .83966 L
.45044 .84822 L
.44898 .85608 L
.44812 .86173 L
.44753 .86663 L
.44733 .86887 L
.4472 .87054 L
.44713 .87175 L
.44711 .87223 L
.4471 .87264 L
.44709 .87291 L
.44709 .87308 L
.44709 .87317 L
.44709 .87318 L
.44709 .87317 L
.44709 .87307 L
.44708 .87289 L
.44708 .87262 L
.44707 .87231 L
.44703 .87145 L
.44695 .87016 L
.44682 .86845 L
.44663 .8665 L
.44612 .8622 L
.44526 .85645 L
.44172 .83914 L
.43608 .81868 L
Mistroke
.41716 .76939 L
.38269 .70582 L
.33666 .64256 L
.27624 .57931 L
.20797 .52531 L
.1446 .48795 L
.1163 .47488 L
.08935 .46453 L
.06752 .45775 L
.05105 .45372 L
.03738 .45123 L
.0318 .4505 L
.02785 .45012 L
.02661 .45002 L
.02554 .44996 L
.02508 .44994 L
.02466 .44992 L
.02435 .44991 L
.02413 .4499 L
.02393 .4499 L
.02387 .4499 L
.02383 .4499 L
.02381 .4499 L
.02387 .4499 L
.02401 .4499 L
.02425 .44989 L
.02451 .44988 L
.02488 .44987 L
.02586 .44982 L
.02728 .44973 L
.03075 .44941 L
.03617 .44874 L
.04241 .44775 L
.05778 .44455 L
.07608 .43957 L
.12722 .42014 L
.18333 .39036 L
.24321 .34858 L
.30648 .29102 L
.35782 .23028 L
.40044 .16382 L
.42739 .10605 L
.436 .08136 L
.44215 .05886 L
.44405 .05 L
.44534 .04286 L
.44614 .03745 L
.44667 .03288 L
.44685 .03099 L
.44697 .0293 L
Mistroke
.44704 .02812 L
.44706 .0277 L
.44707 .02732 L
.44708 .02713 L
.44708 .02699 L
.44709 .02686 L
.44709 .02677 L
.44709 .02665 L
.44709 .02662 L
.44709 .02664 L
.44709 .02669 L
.44709 .02677 L
.44709 .02689 L
.4471 .02716 L
.44711 .02756 L
.44716 .02855 L
.44725 .03001 L
.44759 .0337 L
.44819 .03855 L
.44905 .04412 L
.45239 .06038 L
.45859 .0827 L
.47855 .13375 L
.5089 .18984 L
.5554 .25468 L
.60789 .31113 L
.66751 .36123 L
.7335 .40343 L
.79019 .42991 L
.81704 .43925 L
.83737 .44478 L
.85154 .44771 L
.86124 .44917 L
.86496 .44957 L
.86666 .44971 L
.86794 .4498 L
.869 .44986 L
.86943 .44988 L
.8698 .44989 L
.87006 .4499 L
.87024 .4499 L
.87033 .4499 L
.87037 .4499 L
Mfstroke
.008 w
.97619 .99976 Mdot
.5 Mabswid
.5 .72483 m
.13343 .51319 L
s
.5 .72483 m
.28836 1.0914 L
s
newpath
.97619 .99976 .54986 180 270 arc
s
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore

