%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 138.75 3.1875 321.938 116.313
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 119.5 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
138.750000 116.312500 translate
1.000000 -1.000000 scale
0.000000 0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		183.187500 def
/Mheight	113.125000 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.456852 0.137567 0.301145 0.082747 [
[.04415 .28865 -6 -9 ]
[.04415 .28865 6 0 ]
[.18172 .28865 -6 -9 ]
[.18172 .28865 6 0 ]
[.31928 .28865 -6 -9 ]
[.31928 .28865 6 0 ]
[.59442 .28865 -3 -9 ]
[.59442 .28865 3 0 ]
[.73199 .28865 -3 -9 ]
[.73199 .28865 3 0 ]
[.86955 .28865 -3 -9 ]
[.86955 .28865 3 0 ]
[.44435 .0529 -12 -4.5 ]
[.44435 .0529 0 4.5 ]
[.44435 .13565 -12 -4.5 ]
[.44435 .13565 0 4.5 ]
[.44435 .2184 -12 -4.5 ]
[.44435 .2184 0 4.5 ]
[.44435 .38389 -6 -4.5 ]
[.44435 .38389 0 4.5 ]
[.44435 .46664 -6 -4.5 ]
[.44435 .46664 0 4.5 ]
[.44435 .54939 -6 -4.5 ]
[.44435 .54939 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.04415 .30115 m
.04415 .3074 L
s
[(-3)] .04415 .28865 0 1 Mshowa
.18172 .30115 m
.18172 .3074 L
s
[(-2)] .18172 .28865 0 1 Mshowa
.31928 .30115 m
.31928 .3074 L
s
[(-1)] .31928 .28865 0 1 Mshowa
.59442 .30115 m
.59442 .3074 L
s
[(1)] .59442 .28865 0 1 Mshowa
.73199 .30115 m
.73199 .3074 L
s
[(2)] .73199 .28865 0 1 Mshowa
.86955 .30115 m
.86955 .3074 L
s
[(3)] .86955 .28865 0 1 Mshowa
.125 Mabswid
.07166 .30115 m
.07166 .3049 L
s
.09918 .30115 m
.09918 .3049 L
s
.12669 .30115 m
.12669 .3049 L
s
.1542 .30115 m
.1542 .3049 L
s
.20923 .30115 m
.20923 .3049 L
s
.23674 .30115 m
.23674 .3049 L
s
.26426 .30115 m
.26426 .3049 L
s
.29177 .30115 m
.29177 .3049 L
s
.3468 .30115 m
.3468 .3049 L
s
.37431 .30115 m
.37431 .3049 L
s
.40183 .30115 m
.40183 .3049 L
s
.42934 .30115 m
.42934 .3049 L
s
.48437 .30115 m
.48437 .3049 L
s
.51188 .30115 m
.51188 .3049 L
s
.53939 .30115 m
.53939 .3049 L
s
.56691 .30115 m
.56691 .3049 L
s
.62193 .30115 m
.62193 .3049 L
s
.64945 .30115 m
.64945 .3049 L
s
.67696 .30115 m
.67696 .3049 L
s
.70447 .30115 m
.70447 .3049 L
s
.7595 .30115 m
.7595 .3049 L
s
.78701 .30115 m
.78701 .3049 L
s
.81453 .30115 m
.81453 .3049 L
s
.84204 .30115 m
.84204 .3049 L
s
.01664 .30115 m
.01664 .3049 L
s
.89707 .30115 m
.89707 .3049 L
s
.92458 .30115 m
.92458 .3049 L
s
.95209 .30115 m
.95209 .3049 L
s
.97961 .30115 m
.97961 .3049 L
s
.25 Mabswid
0 .30115 m
1 .30115 L
s
.45685 .0529 m
.4631 .0529 L
s
[(-3)] .44435 .0529 1 0 Mshowa
.45685 .13565 m
.4631 .13565 L
s
[(-2)] .44435 .13565 1 0 Mshowa
.45685 .2184 m
.4631 .2184 L
s
[(-1)] .44435 .2184 1 0 Mshowa
.45685 .38389 m
.4631 .38389 L
s
[(1)] .44435 .38389 1 0 Mshowa
.45685 .46664 m
.4631 .46664 L
s
[(2)] .44435 .46664 1 0 Mshowa
.45685 .54939 m
.4631 .54939 L
s
[(3)] .44435 .54939 1 0 Mshowa
.125 Mabswid
.45685 .06945 m
.4606 .06945 L
s
.45685 .086 m
.4606 .086 L
s
.45685 .10255 m
.4606 .10255 L
s
.45685 .1191 m
.4606 .1191 L
s
.45685 .1522 m
.4606 .1522 L
s
.45685 .16875 m
.4606 .16875 L
s
.45685 .1853 m
.4606 .1853 L
s
.45685 .20185 m
.4606 .20185 L
s
.45685 .23495 m
.4606 .23495 L
s
.45685 .2515 m
.4606 .2515 L
s
.45685 .26805 m
.4606 .26805 L
s
.45685 .2846 m
.4606 .2846 L
s
.45685 .31769 m
.4606 .31769 L
s
.45685 .33424 m
.4606 .33424 L
s
.45685 .35079 m
.4606 .35079 L
s
.45685 .36734 m
.4606 .36734 L
s
.45685 .40044 m
.4606 .40044 L
s
.45685 .41699 m
.4606 .41699 L
s
.45685 .43354 m
.4606 .43354 L
s
.45685 .45009 m
.4606 .45009 L
s
.45685 .48319 m
.4606 .48319 L
s
.45685 .49974 m
.4606 .49974 L
s
.45685 .51629 m
.4606 .51629 L
s
.45685 .53284 m
.4606 .53284 L
s
.45685 .03635 m
.4606 .03635 L
s
.45685 .01981 m
.4606 .01981 L
s
.45685 .00326 m
.4606 .00326 L
s
.45685 .56594 m
.4606 .56594 L
s
.45685 .58248 m
.4606 .58248 L
s
.45685 .59903 m
.4606 .59903 L
s
.45685 .61558 m
.4606 .61558 L
s
.25 Mabswid
.45685 0 m
.45685 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.49587 .2218 m
.50082 .22212 L
.50613 .22259 L
.51569 .22377 L
.527 .22572 L
.53717 .22801 L
.54759 .23094 L
.55857 .23472 L
.57735 .24317 L
.59576 .25472 L
.6039 .26136 L
.61184 .26925 L
.61766 .27641 L
.62289 .2845 L
.62678 .29247 L
.62941 .3 L
.63043 .3041 L
.63113 .30786 L
.63141 .30996 L
.63154 .31107 L
.63165 .31225 L
.63179 .31441 L
.63186 .31641 L
.63186 .31826 L
.63181 .32024 L
.6317 .32212 L
.63155 .32383 L
.63132 .32585 L
.63099 .32804 L
.6302 .33203 L
.62908 .33629 L
.62751 .34098 L
.62324 .35042 L
.61798 .35903 L
.61193 .36695 L
.59626 .38233 L
.57518 .39703 L
.55375 .408 L
.52711 .41797 L
.51132 .42241 L
.49572 .42589 L
.48123 .42838 L
.46507 .4304 L
.45654 .43115 L
.45159 .43149 L
.44704 .43174 L
.44223 .43194 L
.43957 .43202 L
.43704 .43208 L
.43254 .43215 L
Mistroke
.42999 .43216 L
.42762 .43216 L
.42302 .4321 L
.41869 .432 L
.41479 .43186 L
.41058 .43167 L
.4011 .43105 L
.3924 .43026 L
.37592 .42817 L
.35846 .42509 L
.34227 .42138 L
.32785 .41734 L
.29431 .40481 L
.26572 .38969 L
.24191 .37243 L
.23068 .36196 L
.22144 .35157 L
.2141 .34156 L
.20842 .33206 L
.20332 .3212 L
.20103 .31493 L
.19932 .30918 L
.19793 .30321 L
.19698 .29754 L
.1966 .2944 L
.19635 .2915 L
.19617 .28831 L
.19612 .2867 L
.1961 .28493 L
.19614 .28196 L
.19626 .27924 L
.19649 .27609 L
.19681 .27311 L
.19761 .26781 L
.19882 .26204 L
.20052 .25583 L
.20288 .249 L
.20921 .2353 L
.21691 .22284 L
.22573 .21143 L
.24827 .18939 L
.27835 .16843 L
.30869 .15285 L
.3462 .13872 L
.3683 .13244 L
.39008 .12752 L
.41027 .12397 L
.43273 .12109 L
.44457 .12 L
.45143 .1195 L
Mistroke
.45773 .11913 L
.46439 .11882 L
.46807 .11869 L
.47158 .11859 L
.4778 .11847 L
.48134 .11844 L
.48462 .11843 L
.49096 .11847 L
.49695 .11859 L
.50233 .11875 L
.50814 .11899 L
.51451 .11933 L
.52122 .11978 L
.53323 .12081 L
.54552 .12216 L
.5571 .12372 L
.57861 .12738 L
.60135 .13237 L
.62544 .13903 L
.66653 .15413 L
.70119 .17147 L
.73449 .19382 L
.76056 .21763 L
.77297 .23232 L
.78261 .24638 L
.79119 .26236 L
.79493 .27122 L
.79787 .27969 L
.80001 .28742 L
.80095 .29152 L
.80179 .29588 L
.80238 .29956 L
.8029 .30362 L
.80326 .30733 L
.8035 .3108 L
.80366 .31515 L
.80367 .31929 L
.80357 .32301 L
.80333 .32707 L
.80314 .32938 L
.80292 .33147 L
.80232 .33616 L
.80079 .34458 L
.79885 .35243 L
.79663 .35961 L
.79009 .37569 L
.78257 .38966 L
.77289 .40408 L
.74709 .4328 L
.71148 .4609 L
Mistroke
.67093 .48421 L
.62886 .50218 L
.60378 .51062 L
.57595 .51832 L
.55098 .5239 L
.52332 .52874 L
.50754 .53091 L
.49293 .53254 L
.47811 .53385 L
.46391 .53477 L
.45592 .53515 L
.45152 .53531 L
.44737 .53544 L
.43928 .53561 L
.43193 .53568 L
.42766 .53569 L
.42315 .53566 L
.41506 .53553 L
.41055 .53542 L
.40635 .53528 L
.39678 .53487 L
.38899 .53443 L
.38072 .53386 L
.36588 .53257 L
.34999 .5308 L
.33254 .52838 L
.30175 .52287 L
.27344 .51631 L
.22289 .50063 L
.17259 .47889 L
.12817 .45274 L
.08727 .41952 L
.07009 .40118 L
.05452 .38059 L
.04263 .36035 L
.03426 .34139 L
.03111 .33221 L
.02829 .322 L
.02713 .31683 L
.02607 .31125 L
.02532 .30641 L
.02467 .30112 L
.0242 .29588 L
.02393 .29101 L
.02381 .28634 L
.02383 .28137 L
.02401 .27647 L
.02432 .27186 L
.02471 .26772 L
.02526 .26324 L
Mistroke
.02702 .25287 L
.02975 .24153 L
.03348 .22974 L
.03777 .21883 L
.0474 .19951 L
.06045 .17928 L
.09437 .14116 L
.11807 .12108 L
.14273 .10365 L
.19431 .07495 L
.22609 .06111 L
.25698 .04986 L
.31952 .03254 L
.35409 .02569 L
.37206 .02283 L
.39147 .02023 L
.40887 .01834 L
.42479 .01697 L
.43251 .01642 L
.4409 .01591 L
.44878 .01551 L
.45616 .01522 L
.46479 .01496 L
.47428 .01478 L
.48355 .01472 L
.49351 .01477 L
.50277 .01493 L
.51155 .01518 L
.51943 .01549 L
.52801 .01592 L
.54551 .01708 L
.56435 .01878 L
.59821 .02299 L
.63788 .02992 L
.67347 .03808 L
.74335 .0602 L
.77626 .07391 L
.8102 .09079 L
.86545 .12615 L
.90723 .1629 L
.92648 .18484 L
.944 .20975 L
.9572 .23416 L
.96235 .24618 L
.96637 .2573 L
.96957 .26802 L
.97236 .27981 L
.97357 .28631 L
.97448 .29236 L
.97518 .29815 L
Mistroke
.97572 .30434 L
.97604 .31013 L
.97619 .3164 L
.97614 .32232 L
.97592 .32777 L
.97559 .33271 L
.97508 .33812 L
.97438 .34378 L
.97357 .34905 L
.9709 .36223 L
.9675 .37467 L
.9589 .39779 L
.9464 .42227 L
.92906 .44823 L
.89111 .48996 L
.83741 .53187 L
.76942 .56971 L
.69611 .59865 L
.68141 .60332 L
Mfstroke
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore

