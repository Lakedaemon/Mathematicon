%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 92 4 404 316
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 318.375 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
91.562500 315.187500 translate
1.000000 -1.000000 scale
0.000000 0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		312.000000 def
/Mheight	312.000000 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: 1 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics3D
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-1.11022e-016 1.07291 -0.103512 1.33154 [
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
0 g
.5 Mabswid
[ ] 0 setdash
.57916 .64648 m
.57693 .62356 L
s
.58352 .66894 m
.57916 .64648 L
s
.57693 .62356 m
.57679 .60058 L
s
.58996 .69054 m
.58352 .66894 L
s
.57679 .60058 m
.57869 .57796 L
s
.59844 .71088 m
.58996 .69054 L
s
.57869 .57796 m
.58253 .5561 L
s
.60886 .72959 m
.59844 .71088 L
s
.58253 .5561 m
.58819 .53537 L
s
.62108 .74634 m
.60886 .72959 L
s
.63494 .7608 m
.62108 .74634 L
s
.58819 .53537 m
.5955 .51616 L
s
.65022 .77272 m
.63494 .7608 L
s
.68448 .73869 m .74226 .71208 L .75977 .78068 L p .648 .476 .638 r
F P
0 g
s
.75977 .78068 m .70154 .80729 L .68448 .73869 L p .648 .476 .638 r
F P
0 g
s
.5955 .51616 m
.60428 .49881 L
s
.66668 .78186 m
.65022 .77272 L
s
.74226 .71208 m .80036 .68533 L .81832 .75393 L p .648 .476 .638 r
F P
0 g
s
.81832 .75393 m .75977 .78068 L .74226 .71208 L p .648 .476 .638 r
F P
0 g
s
.68406 .78805 m
.66668 .78186 L
s
.85851 .63396 m
.85502 .65417 L
s
.60428 .49881 m
.6143 .48363 L
s
.68406 .78805 m
.70207 .79118 L
s
.85502 .65417 m
.84929 .67447 L
s
.6143 .48363 m
.62532 .4709 L
s
.70154 .80729 m .75977 .78068 L .77752 .85024 L p .648 .476 .638 r
F P
0 g
s
.70207 .79118 m
.7204 .7912 L
s
.77752 .85024 m .71883 .87685 L .70154 .80729 L p .648 .476 .638 r
F P
0 g
s
.84929 .67447 m
.84137 .69439 L
s
.7204 .7912 m
.73874 .78811 L
s
.84137 .69439 m
.83136 .71346 L
s
.73874 .78811 m
.75676 .78201 L
s
.75676 .78201 m
.75691 .78194 L
s
.83136 .71346 m
.81943 .73126 L
s
.75977 .78068 m .81832 .75393 L .83654 .8235 L p .648 .476 .638 r
F P
0 g
s
.83654 .8235 m .77752 .85024 L .75977 .78068 L p .648 .476 .638 r
F P
0 g
s
.67759 .44877 m .63892 .44391 L .65485 .36939 L p .458 .315 .599 r
F P
0 g
s
.64483 .60255 m
.75 .65544 L
s
.65485 .36939 m .69367 .37323 L .67759 .44877 L p .458 .315 .599 r
F P
0 g
s
.81405 .73759 m
.81943 .73126 L
s
.66145 .52454 m .62294 .51865 L .63892 .44391 L p .458 .315 .599 r
F P
0 g
s
.62532 .4709 m
.6349 .46271 L
s
.63892 .44391 m .67759 .44877 L .66145 .52454 L p .458 .315 .599 r
F P
0 g
s
.71732 .45376 m .67759 .44877 L .69367 .37323 L p .458 .315 .599 r
F P
0 g
s
.69367 .37323 m .73357 .37717 L .71732 .45376 L p .458 .315 .599 r
F P
0 g
s
.70102 .53059 m .66145 .52454 L .67759 .44877 L p .458 .315 .599 r
F P
0 g
s
.67759 .44877 m .71732 .45376 L .70102 .53059 L p .458 .315 .599 r
F P
0 g
s
.67487 .44864 m
.6855 .45051 L
s
.6855 .45051 m
.69645 .45564 L
s
.69645 .45564 m
.70633 .46375 L
s
.70633 .46375 m
.71487 .47467 L
s
.44116 .47191 m .42235 .54449 L .38028 .50909 L p .52 .435 .7 r
F P
0 g
s
.53001 .54479 m
.64483 .60255 L
s
.38028 .50909 m .39865 .43704 L .44116 .47191 L p .52 .435 .7 r
F P
0 g
s
.71487 .47467 m
.72181 .48817 L
s
.46018 .39847 m .44116 .47191 L .39865 .43704 L p .52 .435 .7 r
F P
0 g
s
.39865 .43704 m .41723 .36415 L .46018 .39847 L p .52 .435 .7 r
F P
0 g
s
.72181 .48817 m
.72692 .50398 L
s
.48454 .5075 m .46529 .58061 L .42235 .54449 L p .52 .435 .7 r
F P
0 g
s
.42235 .54449 m .44116 .47191 L .48454 .5075 L p .52 .435 .7 r
F P
0 g
s
.72692 .50398 m
.73002 .52174 L
s
.43328 .55789 m
.43598 .58206 L
s
.44085 .60564 m
.43598 .58206 L
s
.43318 .5536 m
.43328 .55789 L
s
.44789 .62823 m
.44085 .60564 L
s
.45702 .64942 m
.44789 .62823 L
s
.46814 .66882 m
.45702 .64942 L
s
.73002 .52174 m
.73095 .54106 L
s
.48112 .68608 m
.46814 .66882 L
s
.50402 .43351 m .48454 .5075 L .44116 .47191 L p .52 .435 .7 r
F P
0 g
s
.44116 .47191 m .46018 .39847 L .50402 .43351 L p .52 .435 .7 r
F P
0 g
s
.20987 .38377 m
.53001 .54479 L
s
.44249 .46747 m
.44335 .464 L
s
.44335 .464 m
.45052 .44329 L
s
.49576 .70088 m
.48112 .68608 L
s
.73095 .54106 m
.72962 .56153 L
s
.51187 .71294 m
.49576 .70088 L
s
.45052 .44329 m
.45922 .42445 L
s
.52918 .72204 m
.51187 .71294 L
s
.72962 .56153 m
.72596 .58266 L
s
.45922 .42445 m
.46921 .40783 L
s
.54743 .72801 m
.52918 .72204 L
s
.56631 .73074 m
.54743 .72801 L
s
.72596 .58266 m
.71998 .60399 L
s
.46921 .40783 m
.48025 .39372 L
s
.58551 .73018 m
.56631 .73074 L
s
.71998 .60399 m
.71173 .62502 L
s
.60468 .72636 m
.58551 .73018 L
s
.48025 .39372 m
.49206 .38238 L
s
.71173 .62502 m
.70131 .64526 L
s
.62351 .71939 m
.60468 .72636 L
s
.70131 .64526 m
.68887 .66424 L
s
.64165 .70943 m
.62351 .71939 L
s
.68887 .66424 m
.67462 .68152 L
s
.65879 .69671 m
.64165 .70943 L
s
.67462 .68152 m
.65879 .69671 L
s
.49206 .38238 m
.50435 .37403 L
s
.50435 .37403 m
.51681 .36882 L
s
.51681 .36882 m
.52914 .36686 L
s
.52914 .36686 m
.541 .36819 L
s
.541 .36819 m
.5521 .37278 L
s
.5521 .37278 m
.56212 .38055 L
s
.56212 .38055 m
.57077 .39133 L
s
.57077 .39133 m
.57778 .4049 L
s
.57778 .4049 m
.58293 .42098 L
s
.58293 .42098 m
.586 .43922 L
s
.27264 .48443 m
.27167 .45864 L
s
.27584 .50997 m
.27264 .48443 L
s
.28129 .5348 m
.27584 .50997 L
s
.27167 .45864 m
.27287 .43304 L
s
.28895 .55848 m
.28129 .5348 L
s
.29878 .58059 m
.28895 .55848 L
s
.27287 .43304 m
.27615 .40808 L
s
.31065 .60074 m
.29878 .58059 L
s
.27615 .40808 m
.28137 .3842 L
s
.586 .43922 m
.58684 .4592 L
s
.32443 .61856 m
.31065 .60074 L
s
.28137 .3842 m
.28836 .36181 L
s
.33992 .63371 m
.32443 .61856 L
s
.58684 .4592 m
.58534 .4805 L
s
.28836 .36181 m
.29693 .3413 L
s
.35692 .64592 m
.33992 .63371 L
s
.37515 .65495 m
.35692 .64592 L
s
.58534 .4805 m
.58144 .50262 L
s
.29693 .3413 m
.30685 .32305 L
s
.39433 .66065 m
.37515 .65495 L
s
.58144 .50262 m
.57514 .52506 L
s
.30685 .32305 m
.31786 .30738 L
s
.41416 .66292 m
.39433 .66065 L
s
.43429 .66171 m
.41416 .66292 L
s
.57514 .52506 m
.56647 .54729 L
s
.45439 .65707 m
.43429 .66171 L
s
.31786 .30738 m
.32968 .29458 L
s
.56647 .54729 m
.55555 .5688 L
s
.47411 .64912 m
.45439 .65707 L
s
.55555 .5688 m
.54253 .58909 L
s
.49311 .63805 m
.47411 .64912 L
s
.54253 .58909 m
.52761 .60768 L
s
.51104 .62413 m
.49311 .63805 L
s
.52761 .60768 m
.51104 .62413 L
s
.32968 .29458 m
.34201 .28488 L
s
.34201 .28488 m
.35454 .27846 L
s
.35454 .27846 m
.36694 .27546 L
s
.36694 .27546 m
.3789 .27593 L
s
.3789 .27593 m
.39007 .27987 L
s
.39007 .27987 m
.40015 .2872 L
s
.40015 .2872 m
.40883 .29777 L
s
.40883 .29777 m
.41584 .31136 L
s
.41584 .31136 m
.42093 .32768 L
s
.42093 .32768 m
.42389 .34639 L
s
.42389 .34639 m
.42454 .36707 L
s
.16422 .55789 m
.14782 .54236 L
s
.42454 .36707 m
.42278 .38925 L
s
.18217 .57024 m
.16422 .55789 L
s
.42278 .38925 m
.41854 .41242 L
s
.20139 .57919 m
.18217 .57024 L
s
.22159 .58457 m
.20139 .57919 L
s
.41854 .41242 m
.41179 .43606 L
s
.24245 .58629 m
.22159 .58457 L
s
.41179 .43606 m
.40261 .45962 L
s
.26361 .58434 m
.24245 .58629 L
s
.28473 .57877 m
.26361 .58434 L
s
.40261 .45962 m
.39107 .48253 L
s
.30545 .56972 m
.28473 .57877 L
s
.39107 .48253 m
.37735 .50426 L
s
.3254 .55742 m
.30545 .56972 L
s
.37735 .50426 m
.36166 .5243 L
s
.34425 .54216 m
.3254 .55742 L
s
.36166 .5243 m
.34425 .54216 L
s
.20987 .38377 m
.2027 .75018 L
s
.20987 .38377 m
.45865 .31751 L
s
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore

